#include<obliv.oh>
#include"nn.h"

obliv int max(obliv int *array,int n);

 obliv int max(obliv int *array,int n){
  int i;
  obliv int index=0;
  obliv int maxnum=array[0];
  for(i=1;i<n;i++){
    obliv if(maxnum<array[i]){
      maxnum=array[i];
      index=i;
    }
  }
  return(index);
 }

void nn(void* args)
{
  protocolIO *io=args;
  obliv int w[w_row][w_col];
  obliv int b[b_row][b_col];
  obliv int x[x_row][x_col];
  obliv int y[y_row][y_col];
  int i,j,k;
  obliv int m1[10][10];
  obliv int t=10000;
  int result;
  for(i=0;i<w_row;i++){
    for(j=0;j<w_col;j++){
      w[i][j]=feedOblivInt(io->w[i][j],1);
    }
  }

  for(i=0;i<b_row;i++){
    for(j=0;j<b_col;j++){
      b[i][j]=feedOblivInt(io->b[i][j],1);
    }
  }

  for(i=0;i<x_row;i++){
    for(j=0;j<x_col;j++){
      x[i][j]=feedOblivInt(io->x[i][j],2);
    }
  }

for(i=0;i<x_row;i++){
   for(j=0;j<w_col;j++){
     obliv int s=0;
     for(k=0;k<x_col;k++){
       s+=(x[i][k]*w[k][j]);
       //printf("%ld\t",s);
     }
     m1[i][j]=s/t+b[0][j];
     //m1[i][j]=s;
     //printf("%f\t",s);
	 printf("%d\t",m1[i][j]);
   }
   printf("\n");
}

for(i=0;i<10;i++){
  revealOblivInt(&io->res[i],max(m1[i],10),0);
  //printf("%f\n",result);
}
}
